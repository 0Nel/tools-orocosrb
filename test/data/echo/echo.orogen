name 'echo'

import_types_from "echo.h"

typekit do
    opaque_type '/OpaquePoint', 'echo/Point',
            :includes => [File.expand_path('opaques.h', File.dirname(component.deffile))]
end

task_context 'Echo' do
    extended_state_support

    input_port 'input',   'int'
    input_port 'input_struct',   'echo::Int'
    output_port 'output', 'int'
    output_port 'ondemand', 'int'

    input_port  "input_opaque", "/OpaquePoint"
    output_port "output_opaque", "/OpaquePoint"

    operation(:kill).
        doc('cause a segmentation fault')

    operation(:write).
        returns('int').
        argument('value', 'int', 'value_arg').
        doc('write_method')

    operation(:write_opaque).
        argument('value', 'int')

    port_driven :input
end

task_context 'EchoSubmodel' do
    subclasses 'Echo'
end

deployment "echo" do
    echo_task = task('echo_Echo', 'Echo').
        periodic 0.05
end

