#! /usr/bin/env ruby

require 'drb'
require 'roby'
require 'irb'

components = ARGV.dup

IRB.setup(nil)

require 'orocos'
Orocos.initialize

b = nil
Module.new do
    singleton = class << self; self; end
    components.each do |name|
        task_name, var_name = name.split(':')
        var_name ||= task_name

        singleton.class_eval do
            attr_reader var_name
        end
        instance_variable_set("@#{var_name}", Orocos::TaskContext.get(task_name))
    end

    include Orocos

    b = binding
end

ws  = IRB::WorkSpace.new(b)
irb = IRB::Irb.new(ws)
IRB.conf[:MAIN_CONTEXT] = irb.context

trap("SIGINT") do
    irb.signal_handle
end

catch(:IRB_EXIT) do
    irb.eval_input
end

